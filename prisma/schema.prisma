// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Country {
  id           String    @id @default(cuid())
  country_name String?
  Address      Address[]

  @@map(name: "country")
}

model Address {
  id            String        @id @default(cuid())
  unit_number   String?
  street_number String?
  address_line1 String?
  address_line2 String?
  city          String?
  region        String?
  postal_code   String?
  country_id    String
  country       Country       @relation(fields: [country_id], references: [id])
  userAddress   UserAddress[]

  @@map(name: "address")
}

model User {
  id                String              @id @default(cuid())
  email_address     String?
  phone_number      String?
  password          String?
  userAddress       UserAddress[]
  userPaymentMethod UserPaymentMethod[]
  shoppingCart      ShoppingCart[]
  shopOrder         ShopOrder[]
  userReview        UserReview[]
  is_deleted        Boolean             @default(false)

  @@map(name: "user")
}

model UserAddress {
  user_id    String
  address_id String
  is_default Int?
  user       User    @relation(fields: [user_id], references: [id])
  address    Address @relation(fields: [address_id], references: [id])

  @@unique([user_id, address_id])
  @@map(name: "user_address")
}

model Category {
  id                 String              @id @default(cuid())
  parent_category_id String?             @default("")
  name               String
  description        String?             @default("")
  promotionCategory  PromotionCategory[]
  product            Product[]
  variation          Variation[]
  is_deleted         Boolean             @default(false)

  @@map(name: "category")
}

model Promotion {
  id                String              @id @default(cuid())
  name              String
  description       String?             @default("")
  discount_rate     Int?                @default(0)
  start_date        String?             @default("")
  end_date          String?             @default("")
  promotionCategory PromotionCategory[]

  @@map(name: "promotion")
}

model PromotionCategory {
  id           String    @id @default(cuid())
  category_id  String
  promotion_id String
  category     Category  @relation(fields: [category_id], references: [id])
  promotion    Promotion @relation(fields: [promotion_id], references: [id])

  @@map(name: "promotion_category")
}

model Product {
  id            String        @id @default(cuid())
  category_id   String
  name          String
  description   String?       @default("")
  product_image String?       @default("")
  category      Category      @relation(fields: [category_id], references: [id])
  productItem   ProductItem[]
  is_deleted    Boolean       @default(false)

  @@map(name: "product")
}

model ProductItem {
  id            String  @id @default(cuid())
  product_id    String
  sku           String? @default("")
  qty_in_stock  Int?    @default(0)
  product_image String? @default("")
  price         Int?

  product              Product                @relation(fields: [product_id], references: [id])
  productConfiguration ProductConfiguration[]
  shoppingCartItem     ShoppingCartItem[]
  orderLine            OrderLine[]
  userReview           UserReview[]
  is_deleted           Boolean                @default(false)

  @@map(name: "product_item")
}

model Variation {
  id          String @id @default(cuid())
  category_id String
  name        String

  category        Category          @relation(fields: [category_id], references: [id])
  variationOption VariationOption[]

  @@map(name: "variation")
}

model VariationOption {
  id           String @id @default(cuid())
  variation_id String
  value        String

  variation            Variation              @relation(fields: [variation_id], references: [id])
  productConfiguration ProductConfiguration[]

  @@map(name: "variation_option")
}

model ProductConfiguration {
  id                  String @id @default(cuid())
  product_item_id     String
  variation_option_id String

  productItem     ProductItem     @relation(fields: [product_item_id], references: [id])
  variationOption VariationOption @relation(fields: [variation_option_id], references: [id])

  @@map(name: "product_configuration")
}

model PaymentType {
  id                String              @id @default(cuid())
  value             String
  userPaymentMethod UserPaymentMethod[]

  @@map(name: "payment_type")
}

model UserPaymentMethod {
  id              String  @id @default(cuid())
  user_id         String
  payment_type_id String
  provider        String? @default("")
  account_number  String? @default("")
  is_default      Boolean @default(false)

  paymentType PaymentType @relation(fields: [payment_type_id], references: [id])
  user        User        @relation(fields: [user_id], references: [id])
  shopOrder   ShopOrder[]

  @@map(name: "user_payment_method")
}

model ShoppingCart {
  id      String @id @default(cuid())
  user_id String

  user             User               @relation(fields: [user_id], references: [id])
  shoppingCartItem ShoppingCartItem[]

  @@map(name: "shopping_cart")
}

model ShoppingCartItem {
  id              String @id @default(cuid())
  cart_id         String
  product_item_id String
  qty             Int?

  productItem ProductItem  @relation(fields: [product_item_id], references: [id])
  cart        ShoppingCart @relation(fields: [cart_id], references: [id])

  @@map(name: "shopping_cart_item")
}

model ShippingMethod {
  id    String @id @default(cuid())
  name  String
  price Int?   @default(0)

  @@map(name: "shipping_method")
}

model OrderStatus {
  id     String  @id @default(cuid())
  status String? @default("")

  @@map(name: "order_status")
}

model ShopOrder {
  id                String  @id @default(cuid())
  user_id           String
  order_date        String? @default("")
  payment_method_id String
  shipping_address  String? @default("")
  shipping_method   String? @default("")
  order_total       Int?
  order_status      Int?

  payment_method UserPaymentMethod @relation(fields: [payment_method_id], references: [id])
  user           User              @relation(fields: [user_id], references: [id])
  OrderLine      OrderLine[]

  @@map(name: "shop_order")
}

model OrderLine {
  id              String @id @default(cuid())
  product_item_id String
  order_id        String
  qty             Int?
  price           Int?

  productItem ProductItem @relation(fields: [product_item_id], references: [id])
  shopOrder   ShopOrder   @relation(fields: [order_id], references: [id])

  @@map(name: "order_line")
}

model UserReview {
  id                 String  @id @default(cuid())
  user_id            String
  ordered_product_id String
  rating_value       Int?    @default(5)
  comment            String? @default("")

  ordered_product ProductItem @relation(fields: [ordered_product_id], references: [id])
  user            User        @relation(fields: [user_id], references: [id])

  @@map(name: "user_review")
}
